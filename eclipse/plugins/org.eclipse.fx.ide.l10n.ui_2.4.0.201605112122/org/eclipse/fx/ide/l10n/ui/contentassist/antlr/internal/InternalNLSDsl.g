/*
 * generated by Xtext
 */
grammar InternalNLSDsl;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package org.eclipse.fx.ide.l10n.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.eclipse.fx.ide.l10n.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.eclipse.fx.ide.l10n.services.NLSDslGrammarAccess;

}

@parser::members {
 
 	private NLSDslGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(NLSDslGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleNLS
entryRuleNLS 
:
{ before(grammarAccess.getNLSRule()); }
	 ruleNLS
{ after(grammarAccess.getNLSRule()); } 
	 EOF 
;

// Rule NLS
ruleNLS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNLSAccess().getGroup()); }
(rule__NLS__Group__0)
{ after(grammarAccess.getNLSAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePackageDeclaration
entryRulePackageDeclaration 
:
{ before(grammarAccess.getPackageDeclarationRule()); }
	 rulePackageDeclaration
{ after(grammarAccess.getPackageDeclarationRule()); } 
	 EOF 
;

// Rule PackageDeclaration
rulePackageDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPackageDeclarationAccess().getGroup()); }
(rule__PackageDeclaration__Group__0)
{ after(grammarAccess.getPackageDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNLSBundle
entryRuleNLSBundle 
:
{ before(grammarAccess.getNLSBundleRule()); }
	 ruleNLSBundle
{ after(grammarAccess.getNLSBundleRule()); } 
	 EOF 
;

// Rule NLSBundle
ruleNLSBundle
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNLSBundleAccess().getGroup()); }
(rule__NLSBundle__Group__0)
{ after(grammarAccess.getNLSBundleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNLSFormatter
entryRuleNLSFormatter 
:
{ before(grammarAccess.getNLSFormatterRule()); }
	 ruleNLSFormatter
{ after(grammarAccess.getNLSFormatterRule()); } 
	 EOF 
;

// Rule NLSFormatter
ruleNLSFormatter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNLSFormatterAccess().getGroup()); }
(rule__NLSFormatter__Group__0)
{ after(grammarAccess.getNLSFormatterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMessageEntry
entryRuleMessageEntry 
:
{ before(grammarAccess.getMessageEntryRule()); }
	 ruleMessageEntry
{ after(grammarAccess.getMessageEntryRule()); } 
	 EOF 
;

// Rule MessageEntry
ruleMessageEntry
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMessageEntryAccess().getGroup()); }
(rule__MessageEntry__Group__0)
{ after(grammarAccess.getMessageEntryAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMessageParam
entryRuleMessageParam 
:
{ before(grammarAccess.getMessageParamRule()); }
	 ruleMessageParam
{ after(grammarAccess.getMessageParamRule()); } 
	 EOF 
;

// Rule MessageParam
ruleMessageParam
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMessageParamAccess().getGroup()); }
(rule__MessageParam__Group__0)
{ after(grammarAccess.getMessageParamAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMessage
entryRuleMessage 
:
{ before(grammarAccess.getMessageRule()); }
	 ruleMessage
{ after(grammarAccess.getMessageRule()); } 
	 EOF 
;

// Rule Message
ruleMessage
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMessageAccess().getGroup()); }
(rule__Message__Group__0)
{ after(grammarAccess.getMessageAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRichString
entryRuleRichString 
:
{ before(grammarAccess.getRichStringRule()); }
	 ruleRichString
{ after(grammarAccess.getRichStringRule()); } 
	 EOF 
;

// Rule RichString
ruleRichString
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRichStringAccess().getAlternatives()); }
(rule__RichString__Alternatives)
{ after(grammarAccess.getRichStringAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRichStringLiteral
entryRuleRichStringLiteral 
:
{ before(grammarAccess.getRichStringLiteralRule()); }
	 ruleRichStringLiteral
{ after(grammarAccess.getRichStringLiteralRule()); } 
	 EOF 
;

// Rule RichStringLiteral
ruleRichStringLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRichStringLiteralAccess().getValueAssignment()); }
(rule__RichStringLiteral__ValueAssignment)
{ after(grammarAccess.getRichStringLiteralAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRichStringLiteralStart
entryRuleRichStringLiteralStart 
:
{ before(grammarAccess.getRichStringLiteralStartRule()); }
	 ruleRichStringLiteralStart
{ after(grammarAccess.getRichStringLiteralStartRule()); } 
	 EOF 
;

// Rule RichStringLiteralStart
ruleRichStringLiteralStart
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRichStringLiteralStartAccess().getValueAssignment()); }
(rule__RichStringLiteralStart__ValueAssignment)
{ after(grammarAccess.getRichStringLiteralStartAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRichStringLiteralEnd
entryRuleRichStringLiteralEnd 
:
{ before(grammarAccess.getRichStringLiteralEndRule()); }
	 ruleRichStringLiteralEnd
{ after(grammarAccess.getRichStringLiteralEndRule()); } 
	 EOF 
;

// Rule RichStringLiteralEnd
ruleRichStringLiteralEnd
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRichStringLiteralEndAccess().getValueAssignment()); }
(rule__RichStringLiteralEnd__ValueAssignment)
{ after(grammarAccess.getRichStringLiteralEndAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRichStringLiteralInbetween
entryRuleRichStringLiteralInbetween 
:
{ before(grammarAccess.getRichStringLiteralInbetweenRule()); }
	 ruleRichStringLiteralInbetween
{ after(grammarAccess.getRichStringLiteralInbetweenRule()); } 
	 EOF 
;

// Rule RichStringLiteralInbetween
ruleRichStringLiteralInbetween
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRichStringLiteralInbetweenAccess().getValueAssignment()); }
(rule__RichStringLiteralInbetween__ValueAssignment)
{ after(grammarAccess.getRichStringLiteralInbetweenAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRichVarPart
entryRuleRichVarPart 
:
{ before(grammarAccess.getRichVarPartRule()); }
	 ruleRichVarPart
{ after(grammarAccess.getRichVarPartRule()); } 
	 EOF 
;

// Rule RichVarPart
ruleRichVarPart
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRichVarPartAccess().getGroup()); }
(rule__RichVarPart__Group__0)
{ after(grammarAccess.getRichVarPartAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValidID
entryRuleValidID 
:
{ before(grammarAccess.getValidIDRule()); }
	 ruleValidID
{ after(grammarAccess.getValidIDRule()); } 
	 EOF 
;

// Rule ValidID
ruleValidID
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValidIDAccess().getIDTerminalRuleCall()); }
	RULE_ID
{ after(grammarAccess.getValidIDAccess().getIDTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedName
entryRuleQualifiedName 
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
(rule__QualifiedName__Group__0)
{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule PredefinedTypes
rulePredefinedTypes
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPredefinedTypesAccess().getAlternatives()); }
(rule__PredefinedTypes__Alternatives)
{ after(grammarAccess.getPredefinedTypesAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__MessageEntry__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageEntryAccess().getGroup_2_0()); }
(rule__MessageEntry__Group_2_0__0)
{ after(grammarAccess.getMessageEntryAccess().getGroup_2_0()); }
)

    |(
{ before(grammarAccess.getMessageEntryAccess().getGroup_2_1()); }
(rule__MessageEntry__Group_2_1__0)
{ after(grammarAccess.getMessageEntryAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RichString__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRichStringAccess().getExpressionsAssignment_0()); }
(rule__RichString__ExpressionsAssignment_0)
{ after(grammarAccess.getRichStringAccess().getExpressionsAssignment_0()); }
)

    |(
{ before(grammarAccess.getRichStringAccess().getGroup_1()); }
(rule__RichString__Group_1__0)
{ after(grammarAccess.getRichStringAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PredefinedTypes__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPredefinedTypesAccess().getANYEnumLiteralDeclaration_0()); }
(	'ANY' 
)
{ after(grammarAccess.getPredefinedTypesAccess().getANYEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getPredefinedTypesAccess().getNUMBEREnumLiteralDeclaration_1()); }
(	'NUMBER' 
)
{ after(grammarAccess.getPredefinedTypesAccess().getNUMBEREnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getPredefinedTypesAccess().getDATEEnumLiteralDeclaration_2()); }
(	'DATE' 
)
{ after(grammarAccess.getPredefinedTypesAccess().getDATEEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getPredefinedTypesAccess().getTEMPORALEnumLiteralDeclaration_3()); }
(	'TEMPORAL' 
)
{ after(grammarAccess.getPredefinedTypesAccess().getTEMPORALEnumLiteralDeclaration_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__NLS__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NLS__Group__0__Impl
	rule__NLS__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NLS__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNLSAccess().getPackageAssignment_0()); }
(rule__NLS__PackageAssignment_0)?
{ after(grammarAccess.getNLSAccess().getPackageAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NLS__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NLS__Group__1__Impl
	rule__NLS__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NLS__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNLSAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getNLSAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NLS__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NLS__Group__2__Impl
	rule__NLS__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NLS__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getNLSAccess().getBundleListAssignment_2()); }
(rule__NLS__BundleListAssignment_2)
{ after(grammarAccess.getNLSAccess().getBundleListAssignment_2()); }
)
(
{ before(grammarAccess.getNLSAccess().getBundleListAssignment_2()); }
(rule__NLS__BundleListAssignment_2)*
{ after(grammarAccess.getNLSAccess().getBundleListAssignment_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NLS__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NLS__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NLS__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNLSAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getNLSAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__PackageDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDeclaration__Group__0__Impl
	rule__PackageDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDeclarationAccess().getPackageKeyword_0()); }

	'package' 

{ after(grammarAccess.getPackageDeclarationAccess().getPackageKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDeclaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDeclarationAccess().getNameAssignment_1()); }
(rule__PackageDeclaration__NameAssignment_1)
{ after(grammarAccess.getPackageDeclarationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NLSBundle__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NLSBundle__Group__0__Impl
	rule__NLSBundle__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NLSBundle__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNLSBundleAccess().getBundleKeyword_0()); }

	'bundle' 

{ after(grammarAccess.getNLSBundleAccess().getBundleKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NLSBundle__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NLSBundle__Group__1__Impl
	rule__NLSBundle__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NLSBundle__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNLSBundleAccess().getNameAssignment_1()); }
(rule__NLSBundle__NameAssignment_1)
{ after(grammarAccess.getNLSBundleAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NLSBundle__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NLSBundle__Group__2__Impl
	rule__NLSBundle__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NLSBundle__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNLSBundleAccess().getDefaultKeyword_2()); }

	'default' 

{ after(grammarAccess.getNLSBundleAccess().getDefaultKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NLSBundle__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NLSBundle__Group__3__Impl
	rule__NLSBundle__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NLSBundle__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNLSBundleAccess().getLangAssignment_3()); }
(rule__NLSBundle__LangAssignment_3)
{ after(grammarAccess.getNLSBundleAccess().getLangAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NLSBundle__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NLSBundle__Group__4__Impl
	rule__NLSBundle__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__NLSBundle__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNLSBundleAccess().getLeftCurlyBracketKeyword_4()); }

	'{' 

{ after(grammarAccess.getNLSBundleAccess().getLeftCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NLSBundle__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NLSBundle__Group__5__Impl
	rule__NLSBundle__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__NLSBundle__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNLSBundleAccess().getFormatterListAssignment_5()); }
(rule__NLSBundle__FormatterListAssignment_5)*
{ after(grammarAccess.getNLSBundleAccess().getFormatterListAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NLSBundle__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NLSBundle__Group__6__Impl
	rule__NLSBundle__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__NLSBundle__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getNLSBundleAccess().getMessageEntryListAssignment_6()); }
(rule__NLSBundle__MessageEntryListAssignment_6)
{ after(grammarAccess.getNLSBundleAccess().getMessageEntryListAssignment_6()); }
)
(
{ before(grammarAccess.getNLSBundleAccess().getMessageEntryListAssignment_6()); }
(rule__NLSBundle__MessageEntryListAssignment_6)*
{ after(grammarAccess.getNLSBundleAccess().getMessageEntryListAssignment_6()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NLSBundle__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NLSBundle__Group__7__Impl
	rule__NLSBundle__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__NLSBundle__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNLSBundleAccess().getGroup_7()); }
(rule__NLSBundle__Group_7__0)?
{ after(grammarAccess.getNLSBundleAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NLSBundle__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NLSBundle__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NLSBundle__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNLSBundleAccess().getRightCurlyBracketKeyword_8()); }

	'}' 

{ after(grammarAccess.getNLSBundleAccess().getRightCurlyBracketKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__NLSBundle__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NLSBundle__Group_7__0__Impl
	rule__NLSBundle__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NLSBundle__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNLSBundleAccess().getIncludedBundlesKeyword_7_0()); }

	'included-bundles' 

{ after(grammarAccess.getNLSBundleAccess().getIncludedBundlesKeyword_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NLSBundle__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NLSBundle__Group_7__1__Impl
	rule__NLSBundle__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NLSBundle__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNLSBundleAccess().getIncludedBundleListAssignment_7_1()); }
(rule__NLSBundle__IncludedBundleListAssignment_7_1)
{ after(grammarAccess.getNLSBundleAccess().getIncludedBundleListAssignment_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NLSBundle__Group_7__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NLSBundle__Group_7__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NLSBundle__Group_7__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNLSBundleAccess().getGroup_7_2()); }
(rule__NLSBundle__Group_7_2__0)*
{ after(grammarAccess.getNLSBundleAccess().getGroup_7_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__NLSBundle__Group_7_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NLSBundle__Group_7_2__0__Impl
	rule__NLSBundle__Group_7_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NLSBundle__Group_7_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNLSBundleAccess().getCommaKeyword_7_2_0()); }

	',' 

{ after(grammarAccess.getNLSBundleAccess().getCommaKeyword_7_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NLSBundle__Group_7_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NLSBundle__Group_7_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NLSBundle__Group_7_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNLSBundleAccess().getIncludedBundleListAssignment_7_2_1()); }
(rule__NLSBundle__IncludedBundleListAssignment_7_2_1)
{ after(grammarAccess.getNLSBundleAccess().getIncludedBundleListAssignment_7_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NLSFormatter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NLSFormatter__Group__0__Impl
	rule__NLSFormatter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NLSFormatter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNLSFormatterAccess().getFormatterKeyword_0()); }

	'formatter' 

{ after(grammarAccess.getNLSFormatterAccess().getFormatterKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NLSFormatter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NLSFormatter__Group__1__Impl
	rule__NLSFormatter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NLSFormatter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNLSFormatterAccess().getNameAssignment_1()); }
(rule__NLSFormatter__NameAssignment_1)
{ after(grammarAccess.getNLSFormatterAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NLSFormatter__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NLSFormatter__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NLSFormatter__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNLSFormatterAccess().getClassRefAssignment_2()); }
(rule__NLSFormatter__ClassRefAssignment_2)
{ after(grammarAccess.getNLSFormatterAccess().getClassRefAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MessageEntry__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MessageEntry__Group__0__Impl
	rule__MessageEntry__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageEntry__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageEntryAccess().getNameAssignment_0()); }
(rule__MessageEntry__NameAssignment_0)
{ after(grammarAccess.getMessageEntryAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MessageEntry__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MessageEntry__Group__1__Impl
	rule__MessageEntry__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageEntry__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageEntryAccess().getGroup_1()); }
(rule__MessageEntry__Group_1__0)?
{ after(grammarAccess.getMessageEntryAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MessageEntry__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MessageEntry__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageEntry__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageEntryAccess().getAlternatives_2()); }
(rule__MessageEntry__Alternatives_2)
{ after(grammarAccess.getMessageEntryAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MessageEntry__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MessageEntry__Group_1__0__Impl
	rule__MessageEntry__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageEntry__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageEntryAccess().getLeftParenthesisKeyword_1_0()); }

	'(' 

{ after(grammarAccess.getMessageEntryAccess().getLeftParenthesisKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MessageEntry__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MessageEntry__Group_1__1__Impl
	rule__MessageEntry__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageEntry__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageEntryAccess().getParamListAssignment_1_1()); }
(rule__MessageEntry__ParamListAssignment_1_1)
{ after(grammarAccess.getMessageEntryAccess().getParamListAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MessageEntry__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MessageEntry__Group_1__2__Impl
	rule__MessageEntry__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageEntry__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageEntryAccess().getGroup_1_2()); }
(rule__MessageEntry__Group_1_2__0)*
{ after(grammarAccess.getMessageEntryAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MessageEntry__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MessageEntry__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageEntry__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageEntryAccess().getRightParenthesisKeyword_1_3()); }

	')' 

{ after(grammarAccess.getMessageEntryAccess().getRightParenthesisKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__MessageEntry__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MessageEntry__Group_1_2__0__Impl
	rule__MessageEntry__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageEntry__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageEntryAccess().getCommaKeyword_1_2_0()); }

	',' 

{ after(grammarAccess.getMessageEntryAccess().getCommaKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MessageEntry__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MessageEntry__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageEntry__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageEntryAccess().getParamListAssignment_1_2_1()); }
(rule__MessageEntry__ParamListAssignment_1_2_1)
{ after(grammarAccess.getMessageEntryAccess().getParamListAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MessageEntry__Group_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MessageEntry__Group_2_0__0__Impl
	rule__MessageEntry__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageEntry__Group_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageEntryAccess().getLeftCurlyBracketKeyword_2_0_0()); }

	'{' 

{ after(grammarAccess.getMessageEntryAccess().getLeftCurlyBracketKeyword_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MessageEntry__Group_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MessageEntry__Group_2_0__1__Impl
	rule__MessageEntry__Group_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageEntry__Group_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageEntryAccess().getMessageListAssignment_2_0_1()); }
(rule__MessageEntry__MessageListAssignment_2_0_1)
{ after(grammarAccess.getMessageEntryAccess().getMessageListAssignment_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MessageEntry__Group_2_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MessageEntry__Group_2_0__2__Impl
	rule__MessageEntry__Group_2_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageEntry__Group_2_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageEntryAccess().getGroup_2_0_2()); }
(rule__MessageEntry__Group_2_0_2__0)*
{ after(grammarAccess.getMessageEntryAccess().getGroup_2_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MessageEntry__Group_2_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MessageEntry__Group_2_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageEntry__Group_2_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageEntryAccess().getRightCurlyBracketKeyword_2_0_3()); }

	'}' 

{ after(grammarAccess.getMessageEntryAccess().getRightCurlyBracketKeyword_2_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__MessageEntry__Group_2_0_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MessageEntry__Group_2_0_2__0__Impl
	rule__MessageEntry__Group_2_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageEntry__Group_2_0_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageEntryAccess().getCommaKeyword_2_0_2_0()); }

	',' 

{ after(grammarAccess.getMessageEntryAccess().getCommaKeyword_2_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MessageEntry__Group_2_0_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MessageEntry__Group_2_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageEntry__Group_2_0_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageEntryAccess().getMessageListAssignment_2_0_2_1()); }
(rule__MessageEntry__MessageListAssignment_2_0_2_1)
{ after(grammarAccess.getMessageEntryAccess().getMessageListAssignment_2_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MessageEntry__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MessageEntry__Group_2_1__0__Impl
	rule__MessageEntry__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageEntry__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageEntryAccess().getLeftSquareBracketKeyword_2_1_0()); }

	'[' 

{ after(grammarAccess.getMessageEntryAccess().getLeftSquareBracketKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MessageEntry__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MessageEntry__Group_2_1__1__Impl
	rule__MessageEntry__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageEntry__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageEntryAccess().getEntryRefAssignment_2_1_1()); }
(rule__MessageEntry__EntryRefAssignment_2_1_1)
{ after(grammarAccess.getMessageEntryAccess().getEntryRefAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MessageEntry__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MessageEntry__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageEntry__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageEntryAccess().getRightSquareBracketKeyword_2_1_2()); }

	']' 

{ after(grammarAccess.getMessageEntryAccess().getRightSquareBracketKeyword_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MessageParam__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MessageParam__Group__0__Impl
	rule__MessageParam__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageParam__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageParamAccess().getPredefinedAssignment_0()); }
(rule__MessageParam__PredefinedAssignment_0)
{ after(grammarAccess.getMessageParamAccess().getPredefinedAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MessageParam__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MessageParam__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageParam__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageParamAccess().getVarAssignment_1()); }
(rule__MessageParam__VarAssignment_1)
{ after(grammarAccess.getMessageParamAccess().getVarAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Message__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Message__Group__0__Impl
	rule__Message__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Message__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageAccess().getNameAssignment_0()); }
(rule__Message__NameAssignment_0)
{ after(grammarAccess.getMessageAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Message__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Message__Group__1__Impl
	rule__Message__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Message__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getMessageAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Message__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Message__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Message__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageAccess().getMessageAssignment_2()); }
(rule__Message__MessageAssignment_2)
{ after(grammarAccess.getMessageAccess().getMessageAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RichString__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RichString__Group_1__0__Impl
	rule__RichString__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RichString__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRichStringAccess().getExpressionsAssignment_1_0()); }
(rule__RichString__ExpressionsAssignment_1_0)
{ after(grammarAccess.getRichStringAccess().getExpressionsAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RichString__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RichString__Group_1__1__Impl
	rule__RichString__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RichString__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRichStringAccess().getExpressionsAssignment_1_1()); }
(rule__RichString__ExpressionsAssignment_1_1)?
{ after(grammarAccess.getRichStringAccess().getExpressionsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RichString__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RichString__Group_1__2__Impl
	rule__RichString__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RichString__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRichStringAccess().getGroup_1_2()); }
(rule__RichString__Group_1_2__0)*
{ after(grammarAccess.getRichStringAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RichString__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RichString__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RichString__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRichStringAccess().getExpressionsAssignment_1_3()); }
(rule__RichString__ExpressionsAssignment_1_3)
{ after(grammarAccess.getRichStringAccess().getExpressionsAssignment_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__RichString__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RichString__Group_1_2__0__Impl
	rule__RichString__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RichString__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRichStringAccess().getExpressionsAssignment_1_2_0()); }
(rule__RichString__ExpressionsAssignment_1_2_0)
{ after(grammarAccess.getRichStringAccess().getExpressionsAssignment_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RichString__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RichString__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RichString__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRichStringAccess().getExpressionsAssignment_1_2_1()); }
(rule__RichString__ExpressionsAssignment_1_2_1)?
{ after(grammarAccess.getRichStringAccess().getExpressionsAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RichVarPart__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RichVarPart__Group__0__Impl
	rule__RichVarPart__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RichVarPart__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRichVarPartAccess().getKeyAssignment_0()); }
(rule__RichVarPart__KeyAssignment_0)
{ after(grammarAccess.getRichVarPartAccess().getKeyAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RichVarPart__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RichVarPart__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RichVarPart__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRichVarPartAccess().getGroup_1()); }
(rule__RichVarPart__Group_1__0)?
{ after(grammarAccess.getRichVarPartAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RichVarPart__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RichVarPart__Group_1__0__Impl
	rule__RichVarPart__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RichVarPart__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRichVarPartAccess().getFormatAssignment_1_0()); }
(rule__RichVarPart__FormatAssignment_1_0)
{ after(grammarAccess.getRichVarPartAccess().getFormatAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RichVarPart__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RichVarPart__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RichVarPart__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRichVarPartAccess().getFormatterClassAssignment_1_1()); }
(rule__RichVarPart__FormatterClassAssignment_1_1)?
{ after(grammarAccess.getRichVarPartAccess().getFormatterClassAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_0()); }
	ruleValidID
{ after(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
(rule__QualifiedName__Group_1__0)*
{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
(
	'.' 
)
{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_1_1()); }
	ruleValidID
{ after(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__NLS__PackageAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNLSAccess().getPackagePackageDeclarationParserRuleCall_0_0()); }
	rulePackageDeclaration{ after(grammarAccess.getNLSAccess().getPackagePackageDeclarationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NLS__BundleListAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNLSAccess().getBundleListNLSBundleParserRuleCall_2_0()); }
	ruleNLSBundle{ after(grammarAccess.getNLSAccess().getBundleListNLSBundleParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDeclarationAccess().getNameQualifiedNameParserRuleCall_1_0()); }
	ruleQualifiedName{ after(grammarAccess.getPackageDeclarationAccess().getNameQualifiedNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NLSBundle__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNLSBundleAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getNLSBundleAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NLSBundle__LangAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNLSBundleAccess().getLangIDTerminalRuleCall_3_0()); }
	RULE_ID{ after(grammarAccess.getNLSBundleAccess().getLangIDTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NLSBundle__FormatterListAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNLSBundleAccess().getFormatterListNLSFormatterParserRuleCall_5_0()); }
	ruleNLSFormatter{ after(grammarAccess.getNLSBundleAccess().getFormatterListNLSFormatterParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NLSBundle__MessageEntryListAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNLSBundleAccess().getMessageEntryListMessageEntryParserRuleCall_6_0()); }
	ruleMessageEntry{ after(grammarAccess.getNLSBundleAccess().getMessageEntryListMessageEntryParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NLSBundle__IncludedBundleListAssignment_7_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNLSBundleAccess().getIncludedBundleListNLSBundleCrossReference_7_1_0()); }
(
{ before(grammarAccess.getNLSBundleAccess().getIncludedBundleListNLSBundleQualifiedNameParserRuleCall_7_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getNLSBundleAccess().getIncludedBundleListNLSBundleQualifiedNameParserRuleCall_7_1_0_1()); }
)
{ after(grammarAccess.getNLSBundleAccess().getIncludedBundleListNLSBundleCrossReference_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NLSBundle__IncludedBundleListAssignment_7_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNLSBundleAccess().getIncludedBundleListNLSBundleCrossReference_7_2_1_0()); }
(
{ before(grammarAccess.getNLSBundleAccess().getIncludedBundleListNLSBundleQualifiedNameParserRuleCall_7_2_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getNLSBundleAccess().getIncludedBundleListNLSBundleQualifiedNameParserRuleCall_7_2_1_0_1()); }
)
{ after(grammarAccess.getNLSBundleAccess().getIncludedBundleListNLSBundleCrossReference_7_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NLSFormatter__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNLSFormatterAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getNLSFormatterAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NLSFormatter__ClassRefAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNLSFormatterAccess().getClassRefQualifiedNameParserRuleCall_2_0()); }
	ruleQualifiedName{ after(grammarAccess.getNLSFormatterAccess().getClassRefQualifiedNameParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MessageEntry__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageEntryAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getMessageEntryAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MessageEntry__ParamListAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageEntryAccess().getParamListMessageParamParserRuleCall_1_1_0()); }
	ruleMessageParam{ after(grammarAccess.getMessageEntryAccess().getParamListMessageParamParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MessageEntry__ParamListAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageEntryAccess().getParamListMessageParamParserRuleCall_1_2_1_0()); }
	ruleMessageParam{ after(grammarAccess.getMessageEntryAccess().getParamListMessageParamParserRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MessageEntry__MessageListAssignment_2_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageEntryAccess().getMessageListMessageParserRuleCall_2_0_1_0()); }
	ruleMessage{ after(grammarAccess.getMessageEntryAccess().getMessageListMessageParserRuleCall_2_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MessageEntry__MessageListAssignment_2_0_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageEntryAccess().getMessageListMessageParserRuleCall_2_0_2_1_0()); }
	ruleMessage{ after(grammarAccess.getMessageEntryAccess().getMessageListMessageParserRuleCall_2_0_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MessageEntry__EntryRefAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageEntryAccess().getEntryRefMessageEntryCrossReference_2_1_1_0()); }
(
{ before(grammarAccess.getMessageEntryAccess().getEntryRefMessageEntryQualifiedNameParserRuleCall_2_1_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getMessageEntryAccess().getEntryRefMessageEntryQualifiedNameParserRuleCall_2_1_1_0_1()); }
)
{ after(grammarAccess.getMessageEntryAccess().getEntryRefMessageEntryCrossReference_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MessageParam__PredefinedAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageParamAccess().getPredefinedPredefinedTypesEnumRuleCall_0_0()); }
	rulePredefinedTypes{ after(grammarAccess.getMessageParamAccess().getPredefinedPredefinedTypesEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MessageParam__VarAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageParamAccess().getVarIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getMessageParamAccess().getVarIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Message__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getMessageAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Message__MessageAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageAccess().getMessageRichStringParserRuleCall_2_0()); }
	ruleRichString{ after(grammarAccess.getMessageAccess().getMessageRichStringParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RichString__ExpressionsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRichStringAccess().getExpressionsRichStringLiteralParserRuleCall_0_0()); }
	ruleRichStringLiteral{ after(grammarAccess.getRichStringAccess().getExpressionsRichStringLiteralParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RichString__ExpressionsAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRichStringAccess().getExpressionsRichStringLiteralStartParserRuleCall_1_0_0()); }
	ruleRichStringLiteralStart{ after(grammarAccess.getRichStringAccess().getExpressionsRichStringLiteralStartParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RichString__ExpressionsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRichStringAccess().getExpressionsRichVarPartParserRuleCall_1_1_0()); }
	ruleRichVarPart{ after(grammarAccess.getRichStringAccess().getExpressionsRichVarPartParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RichString__ExpressionsAssignment_1_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRichStringAccess().getExpressionsRichStringLiteralInbetweenParserRuleCall_1_2_0_0()); }
	ruleRichStringLiteralInbetween{ after(grammarAccess.getRichStringAccess().getExpressionsRichStringLiteralInbetweenParserRuleCall_1_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RichString__ExpressionsAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRichStringAccess().getExpressionsRichVarPartParserRuleCall_1_2_1_0()); }
	ruleRichVarPart{ after(grammarAccess.getRichStringAccess().getExpressionsRichVarPartParserRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RichString__ExpressionsAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRichStringAccess().getExpressionsRichStringLiteralEndParserRuleCall_1_3_0()); }
	ruleRichStringLiteralEnd{ after(grammarAccess.getRichStringAccess().getExpressionsRichStringLiteralEndParserRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RichStringLiteral__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRichStringLiteralAccess().getValueRICH_TEXTTerminalRuleCall_0()); }
	RULE_RICH_TEXT{ after(grammarAccess.getRichStringLiteralAccess().getValueRICH_TEXTTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RichStringLiteralStart__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRichStringLiteralStartAccess().getValueRICH_TEXT_STARTTerminalRuleCall_0()); }
	RULE_RICH_TEXT_START{ after(grammarAccess.getRichStringLiteralStartAccess().getValueRICH_TEXT_STARTTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RichStringLiteralEnd__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRichStringLiteralEndAccess().getValueRICH_TEXT_ENDTerminalRuleCall_0()); }
	RULE_RICH_TEXT_END{ after(grammarAccess.getRichStringLiteralEndAccess().getValueRICH_TEXT_ENDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RichStringLiteralInbetween__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRichStringLiteralInbetweenAccess().getValueRICH_TEXT_INBETWEENTerminalRuleCall_0()); }
	RULE_RICH_TEXT_INBETWEEN{ after(grammarAccess.getRichStringLiteralInbetweenAccess().getValueRICH_TEXT_INBETWEENTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RichVarPart__KeyAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRichVarPartAccess().getKeyIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getRichVarPartAccess().getKeyIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RichVarPart__FormatAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRichVarPartAccess().getFormatSTRINGTerminalRuleCall_1_0_0()); }
	RULE_STRING{ after(grammarAccess.getRichVarPartAccess().getFormatSTRINGTerminalRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RichVarPart__FormatterClassAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRichVarPartAccess().getFormatterClassNLSFormatterCrossReference_1_1_0()); }
(
{ before(grammarAccess.getRichVarPartAccess().getFormatterClassNLSFormatterQualifiedNameParserRuleCall_1_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getRichVarPartAccess().getFormatterClassNLSFormatterQualifiedNameParserRuleCall_1_1_0_1()); }
)
{ after(grammarAccess.getRichVarPartAccess().getFormatterClassNLSFormatterCrossReference_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_RICH_TEXT : '\'\'\'' RULE_IN_RICH_STRING* ('\'\'\''|('\'' '\''?)? EOF);

RULE_RICH_TEXT_START : '\'\'\'' RULE_IN_RICH_STRING* ('\'' '\''?)? '\u00AB';

RULE_RICH_TEXT_END : '\u00BB' RULE_IN_RICH_STRING* ('\'\'\''|('\'' '\''?)? EOF);

RULE_RICH_TEXT_INBETWEEN : '\u00BB' RULE_IN_RICH_STRING* ('\'' '\''?)? '\u00AB';

fragment RULE_IN_RICH_STRING : ('\'\'' ~(('\u00AB'|'\''))|'\'' ~(('\u00AB'|'\''))|~(('\u00AB'|'\'')));

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


